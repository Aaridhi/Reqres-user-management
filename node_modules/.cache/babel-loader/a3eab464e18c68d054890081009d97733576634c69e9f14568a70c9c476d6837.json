{"ast":null,"code":"// src/services/api.js - API service to handle HTTP requests\nimport axios from 'axios';\nconst BASE_URL = 'https://reqres.in/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Auth services\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      error: 'Login failed'\n    };\n  }\n};\n\n// User services\nconst API_URL = \"https://reqres.in/api/users\";\nexport const getUsers = async () => {\n  try {\n    const response = await fetch(API_URL);\n    if (!response.ok) throw new Error(\"Failed to fetch users\");\n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n    return {\n      data: []\n    }; // Return empty array on error\n  }\n};\nexport const updateUser = async (id, updatedData) => {\n  try {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedData)\n    });\n    if (!response.ok) throw new Error(\"Failed to update user\");\n    return response.json(); // Return updated user data\n  } catch (error) {\n    console.error(\"Error updating user:\", error);\n    return null;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      error: 'Failed to delete user'\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","login","email","password","response","post","data","_error$response","API_URL","getUsers","fetch","ok","Error","json","console","updateUser","id","updatedData","method","body","JSON","stringify","deleteUser","delete","_error$response2"],"sources":["/Users/aaridhi0301/reqres-user-management/src/services/api.js"],"sourcesContent":["// src/services/api.js - API service to handle HTTP requests\nimport axios from 'axios';\n\nconst BASE_URL = 'https://reqres.in/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to add auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Auth services\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/login', { email, password });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { error: 'Login failed' };\n  }\n};\n\n// User services\nconst API_URL = \"https://reqres.in/api/users\";\nexport const getUsers = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\n      return response.json();\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      return { data: [] }; // Return empty array on error\n    }\n};\n  \nexport const updateUser = async (id, updatedData) => {\n    try {\n      const response = await fetch(`${API_URL}/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedData),\n      });\n  \n      if (!response.ok) throw new Error(\"Failed to update user\");\n      return response.json(); // Return updated user data\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n      return null;\n    }\n};\nexport const deleteUser = async (id) => {\n  try {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || { error: 'Failed to delete user' };\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}